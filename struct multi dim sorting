// Weather sort

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 7



typedef struct weather {
    const char *day;
    float temp;
} weather;







// Shorting algorithm
int compare(const void *a, const void *b)
{

	if (((weather *)a)->temp > ((weather *)b)->temp) {
            return -1;
        } else if (((weather *)a)->temp < ((weather *)b)->temp) {
            return 1;
        } else {
            return 0;
        }
    }
int array[100][100];

int main()
{
	struct weather {
		char day[10];
		float temp;
	};
	struct weather week[7] = {
		{ "Sunday", 72.5 },
		{ "Monday", 68.4 },
		{ "Tuesday", 75.0 },
		{ "Wednesday", 73.8 },
		{ "Thursday", 65.1 },
		{ "Friday", 72.8 },
		{"Saturday", 75.2 }

	};


    // Calling the qsort and compare function

    // Putting numbers into array format
    int x;
    qsort(week,SIZE,sizeof(weather),compare);   // base, nitems,size,compar




	puts("This week's forecast:");
	for(x=0;x<7;x++)
		printf("%10s %.1f degrees\n",
				week[x].day,
				week[x].temp);

	return(0);
}































